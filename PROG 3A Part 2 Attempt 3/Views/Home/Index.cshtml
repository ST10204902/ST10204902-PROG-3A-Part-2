@* 
    This view displays the dashboard of the application.
    It lists the products associated with the current user and all other products.
    It also provides a link to create a new product.
*@
@model ProductListsViewModel;
@using static PROG_3A_Part_2_Attempt_3.Helpers.EnumExtensions
@{
    // Set the title of the page
    ViewData["Title"] = "Dashboard";
    // Initialize counters for user products and other products
    int yourCounter = 0;
    int theirCounter = 0;
}

<div class="text-center">
    <!-- Display the title of the page -->
    <h1>@ViewData["Title"]</h1>
    <!-- Display a link to create a new product -->
    @if(User.IsInRole("Farmer")){
    <a class="new-product-button with-icon" asp-action="Create" asp-controller="Products">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
            <path d="M9.99996 4.79169V15.2084M15.2083 10H4.79163" stroke="#0057FC" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
        </svg>
        New Product
    </a>}
</div>

<div class="container bg-light-gray">
    <!-- If the user is a farmer, display their products -->
    @if (User.IsInRole("Farmer"))
    {
        <h2>Your Products</h2>
        <div class="row">
            <!-- Loop through each product associated with the user -->
            @foreach (var product in Model.UserProducts)
            {
                // If the counter is not zero and is a multiple of 2, start a new row
                if (yourCounter != 0 && yourCounter % 2 == 0)
                {
                    @:</div><div class="row">
                }
                <!-- Display the product details -->
                <div class="col-md-6 mb-3">
                    <div class="card">
                        <img class="card-img-top" src="data:image/jpeg;base64,@Convert.ToBase64String(product.Photo)" alt="Product photo">
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">
                                Category: @product.Category.ToCategoryDisplayName()<br>
                                Production Date: @product.ProductionDate.ToString("d")<br>

                                Price: R @Html.DisplayFor(modelItem => product.Cost)
                            </p>
                            <!-- If the user is the owner of the product, display an edit link -->
                            @if (User?.Identity?.Name == product.User?.Email)
                            {
                                @Html.ActionLink("Edit", "Edit", "Products", new { id = product.ProductID }, new { @class = "btn btn-primary" })
                            }
                        </div>
                    </div>
                </div>
                // Increment the counter
                yourCounter++;
            }
        </div>
    }

    <!-- Display all products -->
    <h2>All Products</h2>
    <div class="row">
        <!-- Loop through each product not associated with the user -->
        @foreach (var product in Model.OtherProducts)
        {
            <!-- Display the product details -->
            <div class="col-md-6 mb-3">
                <div class="card">
                    <img class="card-img-top" src="data:image/jpeg;base64,@Convert.ToBase64String(product.Photo)" alt="Product photo">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">
                            Category: @product.Category.ToCategoryDisplayName()<br>
                            Production Date: @product.ProductionDate.ToString("d")<br>
                            Price: R @product.Cost
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>